buildscript {
    ext.kotlin_version = '1.1.2-5'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0-M4'
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'org.junit.platform.gradle.plugin'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile("org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version")
    compile(project(':livingdoc-api'))

    testCompile('org.assertj:assertj-core:3.6.2')
    testCompile('org.mockito:mockito-core:2.7.22')
    testCompile('com.nhaarman:mockito-kotlin:1.4.0') { transitive = false }

    testCompile('org.junit.jupiter:junit-jupiter-api:5.0.0-M4')
    testCompile('org.junit.jupiter:junit-jupiter-params:5.0.0-M4')
    testRuntime('org.junit.jupiter:junit-jupiter-engine:5.0.0-M4')
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives(javadocJar)
    archives(sourcesJar)
}

// Kotlin compiler settings
tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = '1.8'
    }
}
